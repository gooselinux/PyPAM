diff -up PyPAM-0.5.0/PAMmodule.c.nofree PyPAM-0.5.0/PAMmodule.c
--- PyPAM-0.5.0/PAMmodule.c.nofree	2011-01-18 21:24:59.000000000 +0100
+++ PyPAM-0.5.0/PAMmodule.c	2011-02-22 23:31:19.000000000 +0100
@@ -24,8 +24,6 @@ typedef struct {
     char                *service;
     char                *user;
     PyObject            *callback;
-    struct pam_response *response_data;
-    int                 response_len;
     PyObject            *user_data;
     void                *dlh1, *dlh2;
 } PyPAMObject;
@@ -54,15 +52,6 @@ static int PyPAM_conv(int num_msg, const
 
     Py_INCREF(self);
 
-    if (NULL != self->response_data) {
-        for (int i = 0; i < self->response_len; i++) {
-            free(self->response_data[0].resp);
-        }
-        free(self->response_data);
-        self->response_data = NULL;
-        self->response_len = 0;
-    }
-
     PyObject* msgList = PyList_New(num_msg);
     
     for (int i = 0; i < num_msg; i++) {
@@ -92,6 +81,10 @@ static int PyPAM_conv(int num_msg, const
         char* resp_text;
         int resp_retcode = 0;
         if (!PyArg_ParseTuple(respTuple, "si", &resp_text, &resp_retcode)) {
+            while (i > 0) {
+                free((--spr)->resp);
+                --i;
+            }
             free(*resp);
             Py_DECREF(respList);
             return PAM_CONV_ERR;
@@ -101,10 +94,6 @@ static int PyPAM_conv(int num_msg, const
         Py_DECREF(respTuple);
     }
     
-    // Save this so we can free it later.
-    self->response_data = *resp;
-    self->response_len = PyList_Size(respList);
-
     Py_DECREF(respList);
     
     return PAM_SUCCESS;
@@ -144,8 +133,6 @@ static PyObject * PyPAM_pam(PyObject *se
     p->user = NULL;
     Py_INCREF(Py_None);
     p->callback = Py_None;
-    p->response_data = NULL;
-    p->response_len = 0;
     Py_INCREF(Py_None);
     p->user_data = Py_None;
     
